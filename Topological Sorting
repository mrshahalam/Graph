package com.codewithshah;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Stack;

public class fourth {

    private  int V;
    private ArrayList<ArrayList<Integer>> adj;
    fourth(int v)
    {
        V=v;
        adj = new ArrayList<>(V);
        for (int i=0;i<v;++i)
            adj.add(new ArrayList<Integer>());
    }
    void addEdge(int v, int w)
    {
        adj.get(v).add(w);
    }
    void newtopology(int v , boolean[] visited , Stack<Integer> stack)
    {
        visited[v]=true;
        Integer i=0;
        Iterator<Integer> it = adj.get(v).iterator();
        while (it.hasNext())
        {
            i=it.next();
            if (!visited[i])
            {
                newtopology(i ,visited,stack);
            }
            stack.push(new Integer(v));
        }
    }
    void topology()
    {
        Stack<Integer>  stack = new Stack<>();

        boolean visited[] = new boolean[V];
        for (int i=0;i<V;i++)
            visited[i]=false;
        for(int i=0;i<V;i++)
        {
            if(!visited[i])
            {
                newtopology(i,visited,stack);
            }
        }
        while (stack.empty()!=false)
        {
            System.out.print(stack.pop()+" ");
        }
    }
    public  static void  main(String[] args)
    {
        fourth g = new fourth(6);
        g.addEdge(5, 2);
        g.addEdge(5, 0);
        g.addEdge(4, 0);
        g.addEdge(4, 1);
        g.addEdge(2, 3);
        g.addEdge(3, 1);

        System.out.print("the topology sort of the graph is : ");
        g.topology();


    }
}
